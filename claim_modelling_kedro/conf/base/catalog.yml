# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

config:
  type: pickle.PickleDataset
  filepath: data/03_primary/config.pkl
  backend: pickle

raw_features_and_claims_numbers_df:
  type: pandas.CSVDataset
  filepath: data/01_raw/freMTLP2freq.csv

raw_severities_df:
  type: pandas.CSVDataset
  filepath: data/01_raw/freMTLP2sev.csv

features_blacklist_text:
  type: text.TextDataset
  filepath: data/01_raw/features_blacklist.txt

reference_categories:
  type: yaml.YAMLDataset
  filepath: data/01_raw/reference_categories.yml

features_df:
  type: pandas.ParquetDataset
  filepath: data/03_primary/features.pq
  save_args:
    index: True

targets_df: # This is a DataFrame with all targets
  type: pandas.ParquetDataset
  filepath: data/03_primary/targets.pq
  save_args:
    index: True

target_df: # This is a DataFrame with the target for the current task
  type: pandas.ParquetDataset
  filepath: data/03_primary/target.pq
  save_args:
    index: True

train_policies:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/03_primary/train_policies/
  filename_suffix: ".pq"

calib_policies:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/03_primary/calib_policies/
  filename_suffix: ".pq"

test_policies:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/03_primary/test_policies/
  filename_suffix: ".pq"

train_keys:
  type: partitions.PartitionedDataset
  dataset: pickle.PickleDataset
  path: data/03_primary/train_keys/
  filename_suffix: ".pkl"

calib_keys:
  type: partitions.PartitionedDataset
  dataset: pickle.PickleDataset
  path: data/03_primary/calib_keys/
  filename_suffix: ".pkl"

test_keys:
  type: partitions.PartitionedDataset
  dataset: pickle.PickleDataset
  path: data/03_primary/test_keys/
  filename_suffix: ".pkl"

sample_keys:
  type: partitions.PartitionedDataset
  dataset: pickle.PickleDataset
  path: data/04_sample/sample_keys/
  filename_suffix: ".pkl"

sample_features_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/04_sample/features/
  filename_suffix: ".pq"

sample_target_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/04_sample/target/
  filename_suffix: ".pq"

transformed_sample_features_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/04_sample/transformed_features/
  filename_suffix: ".pq"

sample_train_keys:
  type: partitions.PartitionedDataset
  dataset: pickle.PickleDataset
  path: data/04_sample/sample_train_keys/
  filename_suffix: ".pkl"

sample_val_keys:
  type: partitions.PartitionedDataset
  dataset: pickle.PickleDataset
  path: data/04_sample/sample_val_keys/
  filename_suffix: ".pkl"

selected_sample_features_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/04_sample/selected_features/
  filename_suffix: ".pq"

best_haprams:
  type: pickle.PickleDataset
  filepath: data/04_sample/best_hparamas.pkl
  backend: pickle

pure_sample_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/04_sample/pure_predictions/
  filename_suffix: ".pq"

pure_calib_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/05_calib/pure_predictions/
  filename_suffix: ".pq"

calibrated_calib_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/05_calib/calibrated_predictions/
  filename_suffix: ".pq"

pure_train_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/pure_predictions/
  filename_suffix: ".pq"

calibrated_train_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/calibrated_predictions/
  filename_suffix: ".pq"

pure_test_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/pure_predictions/
  filename_suffix: ".pq"

calibrated_test_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/calibrated_predictions/
  filename_suffix: ".pq"

train_target_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/summary/train_target/
  filename_suffix: ".pq"

test_target_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/summary/test_target/
  filename_suffix: ".pq"

train_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/summary/train_predictions/
  filename_suffix: ".pq"

test_predictions_df:
  type: partitions.PartitionedDataset
  dataset: pandas.ParquetDataset
  path: data/06_test/summary/test_predictions/
  filename_suffix: ".pq"

dummy_test_1_df:
  type: pandas.ParquetDataset
  filepath: data/06_test/summary/dummy_test_1_df.pq
  save_args:
    index: True

dummy_test_2_df:
  type: pandas.ParquetDataset
  filepath: data/06_test/summary/dummy_test_2_df.pq
  save_args:
    index: True

dummy_load_pred_and_trg_df:
  type: pandas.ParquetDataset
  filepath: data/06_test/load_pred_and_trg/dummy_load_pred_and_trg_df.pq
  save_args:
    index: True

dummy_charts_1_df:
  type: pandas.ParquetDataset
  filepath: data/06_test/charts/dummy_charts_1_df.pq
  save_args:
    index: True

dummy_charts_2_df:
  type: pandas.ParquetDataset
  filepath: data/06_test/charts/dummy_charts_2_df.pq
  save_args:
    index: True
